---
# tasks file for frontend
- name: Install nginx
  apt:
    name: nginx
    state: present
    update_cache: true
  tags: nginx

- name: Start nginx service
  systemd:
    name: nginx
    state: started
    enabled: true
  tags: nginx

- name: Remove nginx default conf files
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "/etc/nginx/sites-available/default"
    - "/etc/nginx/sites-enabled/default"
  tags: nginx

- name: Create folder fo ssl
  file:
    path: "/etc/nginx/ssl/{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0644
  with_items:
    - "{{ frontend_srv }}"
    - "{{ public_name }}"
  tags:
    - nginx
    - ssl

- name: Copy certificates
  copy:
    src: "files/certificates/{{ item }}"
    dest: "/etc/nginx/ssl/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - "{{ frontend_srv }}/fullchain.pem"
    - "{{ frontend_srv }}/privkey.pem"
    - "{{ public_name }}/fullchain.pem"
    - "{{ public_name }}/privkey.pem"
  notify: Reload nginx
  tags:
    - nginx
    - ssl

- name: Add nginx conf file
  copy:
    src: files/nginx.conf
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: 0644
  notify: Reload nginx
  tags: nginx

- name: Add nginx default site
  template:
    src: templates/frontend.conf.j2
    dest: /etc/nginx/sites-available/frontend.conf
    owner: root
    group: root
    mode: 0644
  notify: Reload nginx
  tags: nginx

- name: Add nginx exporter config file
  copy:
    src: files/status.conf
    dest: /etc/nginx/sites-available/status.conf
    owner: root
    group: root
    mode: 0644
  notify: Reload nginx
  tags:
    - nginx
    - nginx_exporter

- name: Enable sites
  file:
    src: "/etc/nginx/sites-available/{{ item }}"
    dest: "/etc/nginx/sites-enabled/{{ item }}"
    owner: root
    group: root
    state: link
  with_items:
    - frontend.conf
    - status.conf
  notify: Reload nginx
  tags: nginx

- name: Reload nginx
  meta: flush_handlers
  tags: nginx

- name: Create node exporter user
  user:
    name: node
    shell: /sbin/nologin
    create_home: false
    system: true
    state: present
  tags: node

- name: Download node exporter
  get_url:
    url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
    dest: /home/vagrant
  tags: node

- name: Unarchive node exporter
  unarchive:
    src: "node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
    dest: /home/vagrant
    remote_src: true
  tags: node

- name: Copy binary file
  copy:
    src: "node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
    dest: /usr/local/bin
    owner: node
    group: node
    mode: 0755
    remote_src: true
  tags: node

- name: Create node_exporter service
  copy:
    src: files/node_exporter.service
    dest: /etc/systemd/system/node_exporter.service
    owner: root
    group: root
    mode: 0644
  tags: node

- name: Start node exporter service
  systemd:
    name: node_exporter
    state: started
    enabled: true
    daemon_reload: true
  tags: node
######
- name: Create nginx exporter user
  user:
    name: nginx_exporter
    shell: /sbin/nologin
    create_home: false
    system: true
    state: present
  tags: nginx_exporter

- name: Download node exporter
  get_url:
    url: "https://github.com/nginxinc/nginx-prometheus-exporter/releases/download/v{{ nginx_exporter_version }}/nginx-prometheus-exporter_{{ nginx_exporter_version }}_linux_amd64.tar.gz"
    dest: /home/vagrant
  tags: nginx_exporter

- name: Unarchive nginx exporter
  unarchive:
    src: "nginx-prometheus-exporter_{{ nginx_exporter_version }}_linux_amd64.tar.gz"
    dest: /home/vagrant
    remote_src: true
  tags: nginx_exporter

- name: Copy nginx exporter binary file
  copy:
    src: /home/vagrant/nginx-prometheus-exporter
#    src: "nginx-prometheus-exporter_{{ nginx_exporter_version }}_linux_amd64/nginx-prometheus-exporter"
    dest: /usr/local/bin
    owner: nginx_exporter
    group: nginx_exporter
    mode: 0755
    remote_src: true
  tags: nginx_exporter

- name: Create nginx_exporter service
  copy:
    src: files/nginx_exporter.service
    dest: /etc/systemd/system/nginx_exporter.service
    owner: root
    group: root
    mode: 0644
  tags: nginx_exporter

- name: Start node exporter service
  systemd:
    name: nginx_exporter
    state: started
    enabled: true
    daemon_reload: true
  tags: nginx_exporter
